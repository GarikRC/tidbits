# Colors
BLACK='\[\e[0;30m\]'
BLUE='\[\e[0;34m\]'
GREEN='\[\e[0;32m\]'
CYAN='\[\e[0;36m\]'
RED='\[\e[0;31m\]'
PURPLE='\[\e[0;35m\]'
BROWN='\[\e[0;33m\]'
LIGHTGRAY='\[\e[0;37m\]'
DARKGRAY='\[\e[1;30m\]'
LIGHTBLUE='\[\e[1;34m\]'
LIGHTGREEN='\[\e[1;32m\]'
LIGHTCYAN='\[\e[1;36m\]'
LIGHTRED='\[\e[1;31m\]'
LIGHTPURPLE='\[\e[1;35m\]'
YELLOW='\[\e[1;33m\]'
WHITE='\[\e[1;37m\]'
NC='\[\033[00m\]' #'\e[0m'              # No Color


# Flush DNS Cache
alias fcache='dscacheutil -flushcache'

# TextMate
alias m='mate'

# Rails 
alias sc='script/console'
alias ss='script/server'
alias ssd='script/server --debugger'
alias sr='script/runner'
alias sg='script/generate'
alias sd='script/destroy'
alias sp='script/plugin'
alias r='touch tmp/restart.txt'
alias tmig="rake db:migrate && rake db:rollback && rake db:migrate && rake db:test:prepare"
alias mycucumber='script/cucumber --require features/support/env.rb --require features/step_definitions/ --require features/support/'
function cuw {
  if [ $# -eq 0 ]; then
    script/cucumber -p default features/webrat
  else
    script/cucumber -p default $@
  fi
}
function cus {
  if [ $# -eq 0 ]; then
    script/cucumber -pselenium features/selenium
  else
    script/cucumber -pselenium $@
  fi
}

# Awk
alias first="awk '{ print \$1 }'"
alias second="awk '{ print \$2 }'"
alias third="awk '{ print \$3 }'"
alias fourth="awk '{ print \$4 }'"
alias fifth="awk '{ print \$5 }'"
alias sixth="awk '{ print \$6 }'"
alias seventh="awk '{ print \$7 }'"
alias eighth="awk '{ print \$8 }'"
alias ninth="awk '{ print \$9 }'"
alias tenth="awk '{ print \$10 }'"

###############################################################
# Git Configs and Helper Functions
###############################################################

# == Shared Git Config 
# Set USE_TIDBITS_SHARED_GIT to any value to use it. This is so folks can opt out by default
if [ $USE_TIDBITS_SHARED_GIT ]; then
  /usr/bin/env ruby <<RUBY
    require 'fileutils'
    my_config = File.join(ENV["HOME"], ".gitconfig")
    backup_file = "#{my_config}.tidbits.bak"
    mhs_config = File.join(ENV["HOME"], ".tidbits/gitconfig")
    return unless File.exists?(mhs_config)
  
    config = IO.read my_config
  
    shared_config = IO.read mhs_config
    rgx = /^# -- START TIDBITS --.* -- END TIDBITS --$/mi
    if config !~ rgx
      new_config = "\nTIDBITSREPLACE\n\n" << config
    else
      new_config = config.gsub(rgx, 'TIDBITSREPLACE') 
    end
    str = ['# -- START TIDBITS --', shared_config, '# -- END TIDBITS --'].join("\n")
    new_config.sub! /TIDBITSREPLACE/, str
    begin
      FileUtils.cp my_config, backup_file
      File.open(my_config, 'w'){ |f| f.puts new_config }
      FileUtils
    rescue => ex
      puts <<-EOT.gsub!(/\S+/, '')
        !!!!!!!! tidbits was unable to update your git config, but that's okay because
        your original git config was backed up in case. The backup file was saved to
        #{backup_file}. You will need to manually restore it if your #{my_config}
        is out of whack.
      
        Here's more information on what may have happened:
        Exception: #{ex.to_s}
        Backtrace: #{ex.backtrace.join("\n")}
      EOT
    end
RUBY
fi

function gittrack {
  git checkout -b $1 origin/$1
}

# usage: gitpub <branch_name>
# ex: gitpub foo
#
# Pushes a local branch to the remote origin 
# and sets up the local branch as a remote
# tracking one with the correct remote
# and merge settings.
function gitpub {
  git push origin $1:refs/heads/$1
  git fetch origin
  git config branch.$1.remote origin
  git config branch.$1.merge refs/heads/$1
  git checkout $1
}
alias gitamend='git ci --amend -C HEAD'
alias gitmod='git status | grep "modified:" | third'
alias gitdel='git status | grep "deleted:"' 
alias gits='git status'
alias gitbr='git branch'
alias giton='git checkout '
alias gitsup='git svn rebase'
alias gitlog='git log --name-status'
alias gitundo='git rm -f --cached'
alias gitlogst='git log --stat'
alias cmp_origin_to_master='git log origin/master..master'
alias cmp_master_to_origin='git log master..origin/master'
alias cmp_head_to_master='git log HEAD..master'
alias cmp_master_to_head='git log master..HEAD'

# ad is for *alias directory*. It creates persistent
# aliases.
function ad
{
  ~/.tidbits/lib/aliasdir.rb $@
  eval `~/.tidbits/lib/aliasdir.rb --dump`
}
eval `~/.tidbits/lib/aliasdir.rb --dump`

# FF 3.5.x doesn't play nice with SQLite3 on Mac OS X 10.6, a.k.a., Snow Leopard.
# Replace the FF 3.5.x libsqlite3.dylib with the system one.
#
# NOTE: you must do this after ever FF 3.5.x update.
#
# See:
# http://support.mozilla.com/tiki-view_forum_thread.php?locale=it&forumId=1&comments_parentId=449775
function ff35_sqlite3
{
  mv /Applications/Firefox.app/Contents/MacOS/libsqlite3.dylib /Applications/Firefox.app/Contents/MacOS/libsqlite3.dylib.orig
  cp /usr/lib/libsqlite3.dylib /Applications/Firefox.app/Contents/MacOS/libsqlite3.dylib
}